@page "/authentication/reset-password/{Token}"
@layout EmptyLayout
@inject SSOPortalX.Data.Security.PasswordResetService PasswordResetService
@inject NavigationManager NavigationManager

<div class="d-flex align-center" style="height:calc(100% - 96px)">
    <MCard Width=510 Height=520 Class="mx-auto my-auto">
        <div style="height:40px;"></div>
        <div class="mt-2 mx-auto text-center" style="width:420px;">
            <h5 class="mt-2 mb-4">Reset Password üîê</h5>
            <p class="text-body-2 mb-6">Enter your new password below</p>

            @if (!string.IsNullOrEmpty(_message))
            {
                <MAlert Type="AlertTypes.Success" Class="mb-4">
                    @_message 
                    <div class="mt-2">
                        <a href="/authentication/login" class="text-decoration-none primary--text">
                            Click here to login
                        </a>
                    </div>
                </MAlert>
            }

            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <MAlert Type="AlertTypes.Error" Class="mb-4">@_errorMessage</MAlert>
            }

            @if (_tokenIsValid && string.IsNullOrEmpty(_message))
            {
                <MForm @ref="_form">
                    <MTextField @bind-Value="_password" 
                               Label="New Password" 
                               Type="password" 
                               Outlined
                               Class="mb-4"
                               Rules="_passwordRules"
                               HideDetails="@("auto")" />
                    
                    <MTextField @bind-Value="_confirmPassword" 
                               Label="Confirm Password" 
                               Type="password" 
                               Outlined
                               Class="mb-6"
                               Rules="_confirmPasswordRules"
                               HideDetails="@("auto")" />
                </MForm>

                <MButton Class="mt-4 rounded-4 text-btn white--text" 
                         OnClick="HandleResetPassword" 
                         Height=46 
                         Width=340 
                         Color="primary">
                    Reset Password
                </MButton>
            }

            <div class="mt-6">
                <a href="/authentication/login" class="text-decoration-none primary--text">
                    ‚Üê Back to Login
                </a>
            </div>
        </div>
    </MCard>
</div>



@code {
    [Parameter]
    public string Token { get; set; } = "";

    private bool _tokenIsValid;
    private string _password = "";
    private string _confirmPassword = "";
    private string _message = "";
    private string _errorMessage = "";
    private MForm? _form;

    private List<Func<string, StringBoolean>> _passwordRules = new()
    {
        v => !string.IsNullOrEmpty(v) ? true : "Password is required",
        v => v.Length >= 8 ? true : "Password must be at least 8 characters",
    };

    private List<Func<string, StringBoolean>> _confirmPasswordRules = new();

    protected override async Task OnInitializedAsync()
    {
        _confirmPasswordRules.Add(v => !string.IsNullOrEmpty(v) ? true : "Password confirmation is required");
        _confirmPasswordRules.Add(v => v == _password ? true : "Passwords do not match");

        var token = await PasswordResetService.ValidateResetTokenAsync(Token);
        if (token == null)
        {
            _tokenIsValid = false;
            _errorMessage = "The password reset link is invalid or has expired.";
        }
        else
        {
            _tokenIsValid = true;
        }
    }

    private async Task HandleResetPassword()
    {
        if (_form is not null && _form.Validate())
        {
            var success = await PasswordResetService.ResetPasswordAsync(Token, _password);
            if (success)
            {
                _message = "Your password has been reset successfully.";
            }
            else
            {
                _errorMessage = "An error occurred while resetting your password.";
                _tokenIsValid = false; // The token is likely invalid now
            }
        }
    }
}